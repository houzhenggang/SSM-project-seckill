<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 约定大于配置 -->

	<!-- 配置整合Mybatis过程 -->
	<!-- 1、配置数据库相关参数 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 2.数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定数据库连接源的基本属性 -->
		<!--MySQL数据库驱动程序 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<!--MySQL数据库地址 -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!--MySQL数据库用户名 -->
		<property name="user" value="${jdbc.username}" />
		<!--MySQL数据库密码 -->
		<property name="password" value="${jdbc.password}" />

		<!-- c3p0连接池的私有属性 -->
		<!-- 若数据库连接数不足时，一次向数据库服务器申请多少个连接 -->
		<property name="acquireIncrement" value="5" />
		<!-- 初始化数据库连接池时的连接数量 -->
		<property name="initialPoolSize" value="5" />
		<!-- 数据库连接池中的最小连接数量 -->
		<property name="minPoolSize" value="5" />
		<!-- 数据库连接池中的最大连接数量 -->
		<property name="maxPoolSize" value="30" />
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 2 -->
		<property name="acquireRetryAttempts" value="2" />
				<!-- 两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="1000" />
		<!-- 当连接池用完时客户端调用getConnection()后等待获取新连接的时间， 超时后将抛出 SQLException,如设为0则无限期等待。单位毫秒。Default: 
			0 -->
		<property name="checkoutTimeout" value="1000" />
	</bean>
	
	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 注入数据库连接池 -->
	<property name="dataSource" ref="dataSource" />
	<!-- 配置Mybatis全局配置文件 -->
	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	<!-- 扫描entity包 使用别名 省略包名前缀 -->
	<property name="typeAliasesPackage" value="org.seckill.entity"/>
	<!-- 扫描sql配置文件 -->
	<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	
	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory，防止提前初始化导致的jdbc配置无效 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描的Dao接口包 -->
		<property name="basePackage" value="org.seckill.dao" />
	</bean>
</beans>
        